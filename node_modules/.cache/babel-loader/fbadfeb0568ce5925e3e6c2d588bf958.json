{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar TextNode =\n/*#__PURE__*/\nfunction (_node2$default) {\n  _inherits(TextNode, _node2$default);\n\n  function TextNode(optiopn) {\n    var _this;\n\n    _classCallCheck(this, TextNode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextNode).call(this, optiopn));\n    _this.height = optiopn.height || 14;\n    _this.style = optiopn.style || {\n      strokeStyle: 'rgba(255,255,255, 0.99)',\n      fillStyle: 'rgba(255,255,255, 0.5)'\n    };\n    return _this;\n  }\n\n  _createClass(TextNode, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.font = this.style.fontSize + ' ' + this.style.font;\n      var textWidth = ctx.measureText(this.name).width;\n      ctx.closePath();\n      ctx.restore();\n      this.width = textWidth;\n      if (!this.visible) return;\n\n      if (this.selected) {\n        var startx = this.x - (textWidth > this.width ? (textWidth - this.width) / 2 : 0);\n        var width = Math.max(this.width, textWidth);\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(startx - 3, this.y - 1, width + 6, this.height + 2);\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.font = this.style.fontSize + ' ' + this.style.font;\n      ctx.strokeStyle = this.style.strokeStyle;\n      ctx.fillStyle = this.style.fillStyle;\n      ctx.strokeText(this.name, this.x, this.y + 12);\n      ctx.stroke();\n      ctx.fill();\n      ctx.closePath();\n      ctx.restore();\n    }\n  }]);\n\n  return TextNode;\n}(_node2.default);\n\nexports.default = TextNode;","map":null,"metadata":{},"sourceType":"script"}