{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar CircleNode =\n/*#__PURE__*/\nfunction (_node2$default) {\n  _inherits(CircleNode, _node2$default);\n\n  function CircleNode(option) {\n    var _this;\n\n    _classCallCheck(this, CircleNode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CircleNode).call(this, option));\n    _this.r = option.r || 30;\n    _this.beginDegree = option.beginDegree || 0;\n    var endDegree = option.endDegree || 2;\n    _this.endDegree = endDegree * Math.PI;\n    return _this;\n  }\n\n  _createClass(CircleNode, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      if (this.visible == false) return;\n      ctx.save();\n      ctx.translate(this.x + this.width / 2, this.y + this.height / 2);\n      ctx.rotate(this.rotate);\n      ctx.scale(this.scala, this.scala);\n      var w = this.r * 2 * this.scala;\n      var h = this.r * 2 * this.scala;\n      this.setWidth(w);\n      this.setHeight(h);\n      ctx.save();\n      ctx.beginPath();\n      ctx.fillStyle = 'rgba(' + this.style.fillStyle + ',' + this.alpha + ')';\n      ctx.arc(this.x + w / 2, this.y + h / 2, w / 2, this.beginDegree, this.endDegree, true);\n      ctx.fill();\n      ctx.closePath();\n      ctx.restore();\n    }\n  }]);\n\n  return CircleNode;\n}(_node2.default);\n\nexports.default = CircleNode;","map":null,"metadata":{},"sourceType":"script"}