{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startAnimation = startAnimation;\nexports.stopAnimation = stopAnimation;\n\nvar _bezierEasing = require('../../animation/bezierEasing');\n\nvar _bezierEasing2 = _interopRequireDefault(_bezierEasing);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar requestAnimationFrame = void 0;\n\nif (typeof window !== 'undefined') {\n  requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n}\n\nvar totalIterations = 95;\nvar circlesInterval = 14;\nvar restartInterval = 250;\nvar stopRotationAt = totalIterations * 2 / 1.02;\nvar easing = (0, _bezierEasing2.default)(0, 0.47, 0.9, .25);\nvar bounding = 68;\nvar ids = [];\nvar animations = {};\n\nfunction rotateCircle(circles) {\n  var lastFrame = false;\n\n  for (var i = 0, len = circles.length; i < len; ++i) {\n    if (this.iteration >= circlesInterval * i) {\n      var iteration = this.iteration - circlesInterval * i;\n      var revolution = Math.floor(iteration / totalIterations);\n      iteration = iteration - revolution * totalIterations;\n\n      if (iteration < 0) {\n        iteration = totalIterations - iteration;\n      } else if (iteration > totalIterations) {\n        iteration = iteration - totalIterations;\n      }\n\n      if (iteration + revolution * totalIterations > stopRotationAt) {\n        circles[i].setAttributeNS('', 'fill-opacity', '0');\n\n        if (i === circles.length - 1) {\n          lastFrame = true;\n        }\n      } else {\n        var value = easing.get(1 / totalIterations * iteration) * 2 * Math.PI * -1;\n        circles[i].setAttributeNS('', 'fill-opacity', '1');\n        circles[i].setAttributeNS('', 'cx', 75 + bounding * Math.sin(value) + '');\n        circles[i].setAttributeNS('', 'cy', 75 + bounding * Math.cos(value) + '');\n      }\n    }\n  }\n\n  this.iteration++;\n\n  if (!lastFrame) {\n    animations[this.id] = ['animationFrame', requestAnimationFrame(rotateCircle.bind(this, circles))];\n  } else {\n    animations[this.id] = ['timeout', window.setTimeout(startAnimation.bind.apply(startAnimation, [null].concat(_toConsumableArray(circles))), restartInterval)];\n  }\n}\n\nfunction startAnimation() {\n  var id = 0;\n  if (ids.length) id = ids[ids.length - 1] + 1;\n  ids.push(id);\n\n  if (requestAnimationFrame) {\n    for (var _len = arguments.length, elements = Array(_len), _key = 0; _key < _len; _key++) {\n      elements[_key] = arguments[_key];\n    }\n\n    rotateCircle.apply({\n      iteration: 0,\n      currentIteration: 0,\n      id: id\n    }, [elements]);\n  }\n\n  return id;\n}\n\nfunction stopAnimation(animation) {\n  if (animations[animation][0] === 'timeout') {\n    window.clearTimeout(animations[animation][1]);\n  } else {\n    window.cancelAnimationFrame(animations[animation][1]);\n  }\n}","map":null,"metadata":{},"sourceType":"script"}