{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _EditorSelection = require(\"./EditorSelection\");\n\nvar _EditorSelection2 = _interopRequireDefault(_EditorSelection);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar EditorHistory = {\n  curCommand: null,\n  commandStack: [],\n  commandIndex: -1,\n  canUndo: function canUndo() {\n    return this.commandStack.length > 0 && this.commandIndex != -1;\n  },\n  canRedo: function canRedo() {\n    return this.commandStack.length > 0 && this.commandIndex != this.commandStack.length - 1;\n  },\n  undo: function undo() {\n    if (this.canUndo()) {\n      this.commandIndex = this.commandIndex - 1;\n      this.curCommand = this.commandStack[this.commandIndex];\n      document.execCommand(\"undo\");\n    }\n\n    return this.canUndo();\n  },\n  redo: function redo() {\n    if (this.canRedo()) {\n      this.commandIndex = this.commandIndex + 1;\n      this.curCommand = this.commandStack[this.commandIndex];\n      document.execCommand(\"redo\");\n    }\n\n    return this.canRedo();\n  },\n  execCommand: function execCommand(command, flag, args) {\n    switch (command) {\n      case \"inserthtml\":\n        var selection = _EditorSelection2.default.getSelection();\n\n        if (selection.pasteHTML) selection.pasteHTML(args);else document.execCommand(command, flag, args);\n        break;\n\n      default:\n        document.execCommand(command, flag, args);\n        break;\n    }\n\n    if (command == \"selectall\") return;\n    this.commandIndex = this.commandIndex + 1;\n    this.curCommand = {\n      command: command,\n      flag: flag,\n      args: args\n    }; // 必需移除index后的command\n\n    this.commandStack.splice(this.commandIndex, this.commandStack.length - this.commandIndex);\n    this.commandStack[this.commandIndex] = {\n      command: command,\n      flag: flag,\n      args: args\n    };\n  },\n  getCurCommand: function getCurCommand() {\n    return this.curCommand;\n  },\n  getCommandStack: function getCommandStack() {\n    return this.commandStack;\n  },\n  getCommandIndex: function getCommandIndex() {\n    return this.commandIndex;\n  },\n  clear: function clear() {\n    this.curCommand = null;\n    this.commandStack = [];\n    this.commandIndex = -1;\n  }\n};\nexports.default = EditorHistory;","map":null,"metadata":{},"sourceType":"script"}