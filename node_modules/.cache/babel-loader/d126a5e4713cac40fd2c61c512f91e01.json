{"ast":null,"code":"import \"antd/es/list/style/css\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nvar _jsxFileName = \"/Users/zhangxinyu/Desktop/ve_project/src/components/exper-waterfall.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nconst Meta = _Card.Meta;\nexport default class ExperWaterfall extends React.Component {\n  constructor() {\n    super(); //调用基类所有初始化方法\n\n    this.state = {\n      waterfall: []\n    };\n  }\n\n  componentDidMount() {\n    const myFetchOptions = {\n      method: 'GET',\n      mode: 'cors'\n    };\n    fetch(\"http://localhost:8100/experiment/list\", myFetchOptions).then(res => res.json().then(json => {\n      this.setState({\n        waterfall: json\n      });\n    }));\n  }\n\n  _randombg() {\n    const r = Math.floor(Math.random() * 200 + 56);\n    const g = Math.floor(Math.random() * 200 + 56);\n    const b = Math.floor(Math.random() * 200 + 56);\n    return \"rgb(\" + r + ',' + g + ',' + b + \")\";\n  }\n\n  render() {\n    const _style = {\n      layout: {\n        background: this._randombg()\n      },\n      item: {\n        width: 200,\n        height: 200\n      },\n      introduction: {\n        width: '180px',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      color: {\n        color: '#fff'\n      }\n    };\n    return React.createElement(_List, {\n      grid: {\n        gutter: 16,\n        column: 4\n      },\n      dataSource: this.state.waterfall,\n      renderItem: item => React.createElement(_List.Item, {\n        style: _style.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: '/experdetails/' + item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        hoverable: true,\n        style: _style.layout,\n        actions: [React.createElement(_Icon, {\n          type: \"setting\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }), React.createElement(_Icon, {\n          type: \"eye\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        })],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Meta, {\n        style: _style.color,\n        title: item.name,\n        description: React.createElement(\"p\", {\n          style: _style.introduction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, item.introduction),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/zhangxinyu/Desktop/ve_project/src/components/exper-waterfall.js"],"names":["React","Link","Meta","ExperWaterfall","Component","constructor","state","waterfall","componentDidMount","myFetchOptions","method","mode","fetch","then","res","json","setState","_randombg","r","Math","floor","random","g","b","render","_style","layout","background","item","width","height","introduction","overflow","whiteSpace","textOverflow","color","gutter","column","_id","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, Card, Icon } from 'antd';\nconst { Meta } = Card;\n\nexport default class ExperWaterfall extends React.Component {\n  constructor () {\n    super();//调用基类所有初始化方法\n    this.state = {\n      waterfall: []\n    };\n  }\n  componentDidMount () {\n    const myFetchOptions = {\n      method: 'GET',\n      mode : 'cors',\n    };\n    fetch(\"http://localhost:8100/experiment/list\",myFetchOptions)\n      .then(res=>res.json().then(json=>{\n        this.setState({waterfall: json})\n      }))\n  }\n\n  _randombg () {\n    const r = Math.floor(Math.random()*200 + 56);\n    const g = Math.floor(Math.random()*200 + 56);\n    const b = Math.floor(Math.random()*200 + 56);\n    return \"rgb(\" + r + ',' + g + ',' + b + \")\";\n  }\n\n  render() {\n    const _style = {\n      layout: {background: this._randombg()},\n      item: {width: 200,height: 200},\n      introduction: {width: '180px',overflow: 'hidden',whiteSpace:'nowrap',textOverflow: 'ellipsis'},\n      color: {color: '#fff'}\n    }\n    return(\n        <List\n          grid={{ gutter: 16, column: 4 }}\n          dataSource={this.state.waterfall}\n          renderItem={item => (\n            <List.Item style={_style.item}>\n              <Link to={'/experdetails/' + item._id}>\n                <Card hoverable\n                  style={_style.layout}\n                  actions={[<Icon type=\"setting\" />,<Icon type=\"eye\" />]}\n                >\n                  <Meta\n                    style={_style.color}\n                    title={item.name}\n                    description={<p style={_style.introduction}>{item.introduction}</p>}\n                  />\n                </Card>\n              </Link>\n            </List.Item>\n          )}\n        />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}