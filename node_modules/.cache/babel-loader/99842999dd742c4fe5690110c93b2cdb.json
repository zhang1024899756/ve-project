{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _FileUpload = require('../../utils/FileUpload');\n\nvar _FileUpload2 = _interopRequireDefault(_FileUpload);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ImageUpload = function (_Component) {\n  _inherits(ImageUpload, _Component);\n\n  function ImageUpload(props) {\n    _classCallCheck(this, ImageUpload);\n\n    var _this = _possibleConstructorReturn(this, (ImageUpload.__proto__ || Object.getPrototypeOf(ImageUpload)).call(this, props));\n\n    _this.argumentUpload = function (file, files, fileIndex, obj) {\n      var _self = _this;\n\n      var _this$props = _this.props,\n          customUploader = _this$props.customUploader,\n          name = _this$props.name,\n          data = _this$props.data,\n          url = _this$props.url,\n          filter = _this$props.filter,\n          others = _objectWithoutProperties(_this$props, ['customUploader', 'name', 'data', 'url', 'filter']);\n\n      var uploader = _this.props.customUploader ? _this.props.customUploader : _FileUpload2.default;\n      uploader.uploadFile(_extends({\n        file: file,\n        filename: name,\n        data: data,\n        url: url,\n        filter: filter\n      }, others, {\n        onLoad: function onLoad() {\n          _self.beforeUploading(files, fileIndex);\n        },\n        onSuccess: function onSuccess(res) {\n          var url = _self.props.filter(res);\n\n          _self.updateImage(url);\n\n          setTimeout(function () {\n            if (fileIndex + 1 < files.length) {\n              //判断是否还有图片没有上传\n              fileIndex += 1;\n\n              _self.argumentUpload(files[fileIndex], files, fileIndex, obj);\n            } else {\n              //图片上传完毕，重置文件索引 fileIndex\n              fileIndex = 0;\n\n              if (!obj.dropEffect) {\n                obj.value = \"\";\n              }\n\n              _self.afterUploading();\n            }\n          }, 200);\n        },\n        onError: function onError() {\n          _self.errorUploading();\n        }\n      }));\n    };\n\n    _this.beforeUploading = function (files, fileIndex) {\n      var mask = _reactDom2.default.findDOMNode(_this.refs.mask);\n\n      mask.style.display = \"block\";\n      mask.innerHTML = fileIndex + 1 + '/' + files.length + ' Uploading...';\n    };\n\n    _this.afterUploading = function () {\n      // 去除遮罩层\n      var mask = _reactDom2.default.findDOMNode(_this.refs.mask);\n\n      mask.style.display = \"none\";\n      mask.innerHTML = \"Load Success\";\n    };\n\n    _this.errorUploading = function () {\n      var mask = _reactDom2.default.findDOMNode(_this.refs.mask);\n\n      mask.style.display = \"block\";\n      mask.innerHTML = \"Load Error\";\n      setTimeout(function () {\n        mask.style.display = \"none\";\n      }, 200);\n    };\n\n    _this.updateImage = function (image) {\n      var images = _this.state.images;\n      images.push({\n        src: image\n      });\n\n      _this.setState({\n        images: images\n      });\n\n      if (_this.props.onChange) {\n        _this.props.onChange(0, images);\n      }\n    };\n\n    _this.state = {\n      images: [],\n      dragEnter: false\n    };\n    return _this;\n  }\n\n  _createClass(ImageUpload, [{\n    key: 'handleUploadFile',\n    value: function handleUploadFile(obj) {\n      var file = obj.files[0];\n      this.argumentUpload(file, obj.files, 0, obj);\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(e) {\n      e = e || event;\n      var target = e.target || e.srcElement;\n\n      if (target.files.length > 0) {\n        this.handleUploadFile(target); // clear value\n        // target.value = \"\";\n      }\n    }\n  }, {\n    key: 'getImages',\n    value: function getImages() {\n      return this.state.images;\n    }\n  }, {\n    key: 'clearImages',\n    value: function clearImages() {\n      this.setState({\n        images: []\n      });\n    }\n  }, {\n    key: 'handleRemoveImage',\n    value: function handleRemoveImage(e) {\n      e = e || event;\n      var target = e.target || e.srcElement;\n      var index = parseInt(target.getAttribute(\"data-index\"));\n      var images = this.state.images;\n      images.splice(index, 1);\n      this.setState({\n        images: images\n      });\n      if (this.props.onChange) this.props.onChange(0, images);\n    }\n  }, {\n    key: 'handleDrop',\n    value: function handleDrop(e) {\n      e.preventDefault();\n      var files = e.dataTransfer.files;\n\n      if (files.length > 0) {\n        // this.handleUploadFile(files[0]);\n        this.handleUploadFile(e.dataTransfer);\n      }\n\n      this.setState({\n        dragEnter: false\n      }); // console.log(e.type);\n    }\n  }, {\n    key: 'handleDragOver',\n    value: function handleDragOver(e) {\n      e.preventDefault(); // console.log(e.type);\n    }\n  }, {\n    key: 'handleDragEnter',\n    value: function handleDragEnter(e) {\n      this.setState({\n        dragEnter: true\n      }); // console.log(e.type);\n    }\n  }, {\n    key: 'handleDragLeave',\n    value: function handleDragLeave(e) {\n      this.setState({\n        dragEnter: false\n      }); // console.log(e.type);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var images = this.state.images;\n      var dragEnter = this.state.dragEnter;\n      var handleRemoveImage = this.handleRemoveImage.bind(this);\n      var action = this.props.action ? this.props.action : \"/upload\";\n      var showStyle = {\n        \"display\": \"block\"\n      };\n      var hideStyle = {\n        \"display\": \"none\"\n      };\n      var hasImages = images.length > 0;\n      return _react2.default.createElement('div', {\n        className: 'tab-panel'\n      }, _react2.default.createElement('div', {\n        className: (0, _classnames2.default)(\"image-content\", {\n          \" drag-enter\": dragEnter\n        }),\n        onDrop: this.handleDrop.bind(this),\n        onDragOver: this.handleDragOver.bind(this),\n        onDragEnter: this.handleDragEnter.bind(this),\n        onDragLeave: this.handleDragLeave.bind(this),\n        onDragEnd: this.handleDragLeave.bind(this),\n        onDragStart: this.handleDragEnter.bind(this)\n      }, images.map(function (ele, pos) {\n        return _react2.default.createElement('div', {\n          key: pos,\n          className: 'image-item'\n        }, _react2.default.createElement('div', {\n          className: 'image-close',\n          'data-index': pos,\n          onClick: handleRemoveImage\n        }), _react2.default.createElement('img', {\n          src: ele.src,\n          className: 'image-pic',\n          height: '75',\n          width: '120'\n        }));\n      }), _react2.default.createElement('div', {\n        className: 'image-upload2',\n        style: hasImages ? showStyle : hideStyle\n      }, _react2.default.createElement('span', {\n        className: 'image-icon'\n      }), _react2.default.createElement('form', {\n        className: 'image-form',\n        method: 'post',\n        encType: 'multipart/form-data',\n        target: 'up',\n        action: action\n      }, _react2.default.createElement('input', {\n        onChange: this.handleChange.bind(this),\n        multiple: 'multiple',\n        style: {\n          filter: \"alpha(opacity=0)\"\n        },\n        className: 'image-file',\n        type: 'file',\n        name: 'file',\n        accept: 'image/gif,image/jpeg,image/png,image/jpg,image/bmp'\n      })))), _react2.default.createElement('div', {\n        className: 'image-dragTip',\n        style: hasImages ? hideStyle : showStyle\n      }, \"\\u652F\\u6301\\u56FE\\u7247\\u62D6\\u62FD\\u4E0A\\u4F20\"), _react2.default.createElement('div', {\n        className: 'image-upload1',\n        style: hasImages ? hideStyle : showStyle\n      }, _react2.default.createElement('span', {\n        className: 'image-icon'\n      }), _react2.default.createElement('form', {\n        className: 'image-form',\n        method: 'post',\n        encType: 'multipart/form-data',\n        target: 'up',\n        action: action\n      }, _react2.default.createElement('input', {\n        onChange: this.handleChange.bind(this),\n        multiple: 'multiple',\n        style: {\n          filter: \"alpha(opacity=0)\"\n        },\n        className: 'image-file',\n        type: 'file',\n        name: 'file',\n        accept: 'image/gif,image/jpeg,image/png,image/jpg,image/bmp'\n      }))), _react2.default.createElement('div', {\n        className: 'image-mask',\n        ref: 'mask'\n      }, \"Loading....\"));\n    }\n  }]);\n\n  return ImageUpload;\n}(_react.Component);\n\nexports.default = ImageUpload;","map":null,"metadata":{},"sourceType":"script"}