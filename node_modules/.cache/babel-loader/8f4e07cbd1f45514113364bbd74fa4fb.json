{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmotionPanel = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _TabGroup = require('../base/TabGroup');\n\nvar _TabGroup2 = _interopRequireDefault(_TabGroup);\n\nvar _Dialog = require('../base/Dialog');\n\nvar _Dialog2 = _interopRequireDefault(_Dialog);\n\nvar _EditorConstants = require('../../constants/EditorConstants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar EmotionPanel = exports.EmotionPanel = function (_Component) {\n  _inherits(EmotionPanel, _Component);\n\n  function EmotionPanel() {\n    _classCallCheck(this, EmotionPanel);\n\n    return _possibleConstructorReturn(this, (EmotionPanel.__proto__ || Object.getPrototypeOf(EmotionPanel)).apply(this, arguments));\n  }\n\n  _createClass(EmotionPanel, [{\n    key: 'handleClick',\n    value: function handleClick(e) {\n      e = e || event;\n      var target = e.target || e.srcElement;\n      var url = target.getAttribute(\"data-url\");\n      var title = target.getAttribute(\"data-title\");\n\n      if (this.props.onSelectImage) {\n        var img = document.createElement('img');\n        img.src = url;\n        img.title = title;\n        this.props.onSelectImage(e, img);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var images = this.props.images;\n      var handleClick = this.handleClick.bind(this);\n      return _react2.default.createElement('ul', {\n        className: \"emotion-images \" + this.props.name\n      }, images.map(function (ele, pos) {\n        return _react2.default.createElement('li', {\n          className: 'emotion-image',\n          key: pos,\n          'data-url': ele.url,\n          'data-title': ele.title,\n          onClick: handleClick\n        }, _react2.default.createElement('img', {\n          src: ele.url,\n          title: ele.title,\n          'data-url': ele.url,\n          'data-title': ele.title\n        }));\n      }));\n    }\n  }]);\n\n  return EmotionPanel;\n}(_react.Component);\n\nvar EmotionDialog = function (_Component2) {\n  _inherits(EmotionDialog, _Component2);\n\n  function EmotionDialog(props) {\n    _classCallCheck(this, EmotionDialog);\n\n    var _this2 = _possibleConstructorReturn(this, (EmotionDialog.__proto__ || Object.getPrototypeOf(EmotionDialog)).call(this, props));\n\n    _this2.state = {\n      handle: function handle() {}\n    };\n    return _this2;\n  }\n\n  _createClass(EmotionDialog, [{\n    key: 'open',\n    value: function open(handle) {\n      this.setState({\n        handle: handle\n      });\n      this.refs.root.open();\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      if (this.refs.root) this.refs.root.close();\n    }\n  }, {\n    key: 'toggle',\n    value: function toggle(handle) {\n      this.setState({\n        handle: handle\n      });\n      this.refs.root.toggle();\n    }\n  }, {\n    key: 'handleSelectImage',\n    value: function handleSelectImage(e, img) {\n      e = e || event;\n\n      if (this.state.handle) {\n        this.state.handle(img);\n      }\n\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      } else {\n        e.cancelBubble = true;\n      }\n\n      this.close();\n    }\n  }, {\n    key: 'getEmotionTabs',\n    value: function getEmotionTabs() {\n      var EmotionTabs = _EditorConstants.EmotionImages.EmotionTabs,\n          BaseUrl = _EditorConstants.EmotionImages.BaseUrl,\n          SmileyInfor = _EditorConstants.EmotionImages.SmileyInfor;\n      var tabs = [];\n\n      for (var key in EmotionTabs) {\n        var tab = {\n          title: EmotionTabs[key].name\n        };\n        var images = [];\n        var titles = SmileyInfor[key];\n\n        for (var i = 0; i < titles.length; i++) {\n          var index = (i + 1).toString();\n          index = index.length == 1 ? \"0\" + index : index;\n          var image = {\n            title: titles[i],\n            url: BaseUrl + EmotionTabs[key].path + EmotionTabs[key].prefix + index + \".gif?v=1.1\"\n          };\n          images.push(image);\n        }\n\n        tab.images = images;\n        tabs.push(tab);\n      }\n\n      return tabs;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var tabs = [];\n      var EmotionTabs = this.getEmotionTabs();\n\n      for (var i = 0; i < EmotionTabs.length; i++) {\n        tabs.push({\n          title: EmotionTabs[i].title,\n          images: EmotionTabs[i].images,\n          component: _react2.default.createElement(EmotionPanel, {\n            images: EmotionTabs[i].images,\n            name: 'common-images',\n            onSelectImage: this.handleSelectImage.bind(this)\n          })\n        });\n      }\n\n      var buttons = [];\n\n      if (this.props.hidden) {\n        return _react2.default.createElement('div', null);\n      } else {\n        return _react2.default.createElement(_Dialog2.default, {\n          ref: 'root',\n          className: 'emotion-dropdwon',\n          width: 700,\n          height: 508,\n          title: \"\\u8868\\u60C5\",\n          buttons: buttons,\n          onClose: this.close.bind(this)\n        }, _react2.default.createElement(_TabGroup2.default, {\n          tabs: tabs\n        }));\n      }\n    }\n  }]);\n\n  return EmotionDialog;\n}(_react.Component);\n\nexports.default = EmotionDialog;","map":null,"metadata":{},"sourceType":"script"}