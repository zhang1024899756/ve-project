{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/zhangxinyu/Desktop/ve_project/src/components/component-form.js\";\nimport React from 'react';\nimport URL from '../serverAPI.config';\nimport ComponePictures from './comp-pictur';\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\n\nclass CompForm extends React.Component {\n  constructor() {\n    super(); //调用基类所有初始化方法\n\n    this.state = {\n      attrlist: [],\n      imageIdList: []\n    };\n  }\n\n  componentDidMount() {\n    const myFetchOptions = {\n      method: 'GET',\n      mode: 'cors'\n    };\n    fetch(URL.attributeList, myFetchOptions).then(res => res.json().then(json => {\n      console.log('返回值:', json);\n\n      for (var i = 0; i < json.length; i++) {\n        this.state.attrlist.push(React.createElement(Option, {\n          key: json[i]._id.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, json[i].callname));\n      }\n    }));\n  }\n\n  _handleChildValueChange(fileIdList) {\n    this.setState({\n      imageIdList: fileIdList\n    });\n    console.log('fileIdList:', fileIdList);\n  }\n\n  _handleReset() {\n    this.props.form.resetFields();\n  }\n\n  _checkNname(rule, value, callback) {\n    console.log(value);\n    const data = {\n      name: value\n    };\n    const myFetchOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify(data)\n    };\n    fetch(URL.checkComponent, myFetchOptions).then(res => {\n      if (res.status == 202) {\n        callback('组件名称已存在！');\n      } else {\n        callback();\n      }\n    });\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault(); //原生的阻止冒泡\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const data = {\n          id: values.componentId,\n          name: values.componentName,\n          describe: values.componentDescribe,\n          attribute: values.componentAttr,\n          images: this.state.imageIdList\n        };\n        const myFetchOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          mode: 'cors',\n          body: JSON.stringify(data)\n        };\n\n        if (this.state.imageIdList.length >= 1) {\n          fetch(URL.newComponent, myFetchOptions).then(res => {\n            if (res.ok) {\n              _message.success('提交成功！');\n            } else {\n              _message.error('提交失败！');\n            }\n          });\n        } else {\n          _message.warning('组件需要实体图像！');\n        }\n      }\n    });\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      }\n    };\n    const richEditerLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 12\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    return React.createElement(_Form, {\n      onSubmit: this._handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), getFieldDecorator('componentId')(React.createElement(_Input, {\n      type: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({\n      label: \"\\u7EC4\\u4EF6\\u540D\\u79F0\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), getFieldDecorator('componentName', {\n      rules: [{\n        required: true,\n        message: '必填字段！'\n      }, {\n        validator: this._checkNname\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({\n      label: \"\\u7EC4\\u4EF6\\u63CF\\u8FF0\"\n    }, richEditerLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), getFieldDecorator('componentDescribe', {\n      rules: [{\n        required: true,\n        message: '必填字段！'\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"describe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({\n      label: \"\\u7EC4\\u4EF6\\u5C5E\\u6027\"\n    }, richEditerLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), getFieldDecorator('componentAttr', {\n      rules: [{\n        required: true,\n        message: '必填字段！'\n      }]\n    })(React.createElement(_Select, {\n      mode: \"multiple\",\n      placeholder: \"\\u8BF7\\u8BF7\\u4E3A\\u7EC4\\u4EF6\\u6DFB\\u52A0\\u5FC5\\u8981\\u5C5E\\u6027...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.state.attrlist))), React.createElement(FormItem, Object.assign({\n      label: \"\\u7EC4\\u4EF6\\u56FE\\u7247\"\n    }, richEditerLayout, {\n      extra: \"\\u7EC4\\u4EF6\\u56FE\\u7247\\u4EC5\\u652F\\u630132*32\\u5C3A\\u5BF8\\u5927\\u5C0F\\u4E0D\\u8D85\\u8FC71M\\u7684jpg\\u548Cpng\\u6587\\u4EF6\\u3002\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(ComponePictures, {\n      handleChildValueChange: this._handleChildValueChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        width: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"), React.createElement(_Button, {\n      onClick: this._handleReset.bind(this),\n      style: {\n        marginLeft: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"\\u91CD\\u7F6E\")));\n  }\n\n}\n\nconst ComponentForm = _Form.create()(CompForm);\n\nexport default ComponentForm;","map":{"version":3,"sources":["/Users/zhangxinyu/Desktop/ve_project/src/components/component-form.js"],"names":["React","URL","ComponePictures","FormItem","Item","Option","CompForm","Component","constructor","state","attrlist","imageIdList","componentDidMount","myFetchOptions","method","mode","fetch","attributeList","then","res","json","console","log","i","length","push","_id","toString","callname","_handleChildValueChange","fileIdList","setState","_handleReset","props","form","resetFields","_checkNname","rule","value","callback","data","name","headers","body","JSON","stringify","checkComponent","status","_handleSubmit","e","preventDefault","validateFields","err","values","id","componentId","componentName","describe","componentDescribe","attribute","componentAttr","images","newComponent","ok","success","error","warning","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","richEditerLayout","tailFormItemLayout","offset","bind","rules","required","message","validator","width","marginLeft","ComponentForm","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Col, Button, Select, message  } from 'antd';\nimport URL from '../serverAPI.config';\nimport ComponePictures from './comp-pictur';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass CompForm extends React.Component {\n  constructor () {\n    super();//调用基类所有初始化方法\n    this.state = {\n      attrlist: [],\n      imageIdList: []\n    };\n  }\n  componentDidMount () {\n    const myFetchOptions = {\n      method: 'GET',\n      mode : 'cors',\n    };\n    fetch(URL.attributeList,myFetchOptions)\n      .then(res=>res.json().then(json=>{\n        console.log('返回值:', json);\n        for (var i = 0; i < json.length;i++) {\n          this.state.attrlist.push(<Option key={json[i]._id.toString()}>{json[i].callname}</Option>)\n        }\n      }))\n  }\n\n  _handleChildValueChange (fileIdList) {\n    this.setState({ imageIdList: fileIdList })\n    console.log('fileIdList:', fileIdList);\n  }\n\n  _handleReset () {\n    this.props.form.resetFields();\n  }\n\n  _checkNname (rule, value, callback) {\n    console.log(value)\n    const data = {name:value}\n    const myFetchOptions = {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      mode : 'cors',\n      body: JSON.stringify(data)\n    };\n    fetch(URL.checkComponent,myFetchOptions)\n      .then((res) => {\n        if (res.status == 202) {\n          callback('组件名称已存在！');\n        } else {\n          callback();\n        }\n      })\n  }\n\n  _handleSubmit (e) {\n    e.preventDefault();//原生的阻止冒泡\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const data = {\n          id:values.componentId,\n          name:values.componentName,\n          describe:values.componentDescribe,\n          attribute:values.componentAttr,\n          images:this.state.imageIdList\n        }\n        const myFetchOptions = {\n          method: 'POST',\n          headers: {'Content-Type':'application/json'},\n          mode : 'cors',\n          body: JSON.stringify(data)\n        };\n        if (this.state.imageIdList.length >= 1 ) {\n          fetch(URL.newComponent,myFetchOptions)\n            .then((res) => {\n              if (res.ok) {\n                 message.success('提交成功！');\n              }else {\n                 message.error('提交失败！');\n              }\n            })\n        } else {\n          message.warning('组件需要实体图像！');\n        }\n      }\n    })\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      }\n    };\n    const richEditerLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 12 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    return (\n      <Form onSubmit={this._handleSubmit.bind(this)}>\n        <FormItem {...formItemLayout}>\n          {getFieldDecorator('componentId')(\n            <Input type=\"hidden\" />\n          )}\n        </FormItem>\n        <FormItem label=\"组件名称\" {...formItemLayout}>\n          {getFieldDecorator('componentName', {\n            rules: [{ required: true, message: '必填字段！' },{ validator: this._checkNname}],\n          })(\n            <Input placeholder=\"name\"/>\n          )}\n        </FormItem>\n        <FormItem label=\"组件描述\" {...richEditerLayout}>\n          {getFieldDecorator('componentDescribe', {\n            rules: [{ required: true, message: '必填字段！' }],\n          })(\n            <Input placeholder=\"describe\" />\n          )}\n        </FormItem>\n        <FormItem label=\"组件属性\" {...richEditerLayout}>\n          {getFieldDecorator('componentAttr', {\n            rules: [{ required: true, message: '必填字段！' }],\n          })(\n            <Select mode=\"multiple\" placeholder=\"请请为组件添加必要属性...\">\n              {this.state.attrlist}\n            </Select>\n          )}\n        </FormItem>\n        <FormItem label=\"组件图片\" {...richEditerLayout} extra=\"组件图片仅支持32*32尺寸大小不超过1M的jpg和png文件。\">\n          <ComponePictures handleChildValueChange={this._handleChildValueChange.bind(this)}/>\n        </FormItem>\n        <FormItem {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" style={{ width: 100 }}>提交</Button>\n          <Button onClick={this._handleReset.bind(this)} style={{ marginLeft: 8 }}>重置</Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst ComponentForm = Form.create()(CompForm);\nexport default ComponentForm\n"]},"metadata":{},"sourceType":"module"}