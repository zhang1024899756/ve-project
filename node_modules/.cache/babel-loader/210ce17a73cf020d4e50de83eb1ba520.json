{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar HeartNode =\n/*#__PURE__*/\nfunction (_node2$default) {\n  _inherits(HeartNode, _node2$default);\n\n  function HeartNode(optiopn) {\n    var _this;\n\n    _classCallCheck(this, HeartNode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeartNode).call(this, optiopn));\n    _this.width = optiopn.width || 120;\n    _this.height = optiopn.height || 120;\n    return _this;\n  }\n\n  _createClass(HeartNode, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      if (!this.visible) return;\n      ctx.save();\n      ctx.beginPath();\n      ctx.fillStyle = 'rgba(' + this.style.fillStyle + ',' + this.alpha + ')';\n      ctx.moveTo(this.x + 75, this.y + 40);\n      ctx.bezierCurveTo(this.x + 75, this.y + 37, this.x + 70, this.y + 25, this.x + 50, this.y + 25);\n      ctx.bezierCurveTo(this.x + 20, this.y + 25, this.x + 20, this.y + 62.5, this.x + 20, this.y + 62.5);\n      ctx.bezierCurveTo(this.x + 20, this.y + 80, this.x + 40, this.y + 102, this.x + 75, this.y + 120);\n      ctx.bezierCurveTo(this.x + 110, this.y + 102, this.x + 130, this.y + 80, this.x + 130, this.y + 62.5);\n      ctx.bezierCurveTo(this.x + 130, this.y + 62.5, this.x + 130, this.y + 25, this.x + 100, this.y + 25);\n      ctx.bezierCurveTo(this.x + 85, this.y + 25, this.x + 75, this.y + 37, this.x + 75, this.y + 40);\n      ctx.fill();\n      ctx.closePath();\n      ctx.restore();\n    }\n  }]);\n\n  return HeartNode;\n}(_node2.default);\n\nexports.default = HeartNode;","map":null,"metadata":{},"sourceType":"script"}