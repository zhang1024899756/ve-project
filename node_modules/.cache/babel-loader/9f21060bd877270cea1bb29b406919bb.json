{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar INTERVAL_MS = 1000 / 60;\n\nif (!window.requestAnimationFrame) {\n  window.requestAnimationFrame = function (callback) {\n    setTimeout(callback, INTERVAL_MS);\n  };\n}\n\nvar timeouts = [];\nvar intervals = [];\nvar animites = [];\nvar running = false;\nvar count = 0;\nvar EditorTimer = {\n  addCount: function addCount() {\n    count = count + 1;\n  },\n  setTimeout: function setTimeout(callback, ms) {\n    callback.prototype.ms = ms ? ms : INTERVAL_MS;\n    callback.prototype.key = \"timeout\" + new Date().valueOf() + \"-\" + Math.round(Math.random() * 1000);\n    callback.prototype.startTime = new Date().valueOf();\n    callback.prototype.endTime = new Date().valueOf();\n    timeouts.push(callback);\n    return callback.prototype.key;\n  },\n  clearTimeout: function clearTimeout(key) {\n    var _timeouts = timeouts.filter(function (ele, pos) {\n      return ele.prototype.key == key;\n    });\n\n    if (_timeouts.length > 0) {\n      var index = timeouts.indexOf(_timeouts[0]);\n      if (index != -1) timeouts.disabled = true;\n      return _timeouts[0];\n    } else {\n      return null;\n    }\n  },\n  setInterval: function setInterval(callback, ms) {\n    callback.prototype.ms = ms ? ms : INTERVAL_MS;\n    callback.prototype.key = \"interval\" + new Date().valueOf() + \"-\" + Math.round(Math.random() * 1000);\n    callback.prototype.startTime = new Date().valueOf();\n    callback.prototype.endTime = new Date().valueOf();\n    callback.prototype.lastTime = new Date().valueOf();\n    intervals.push(callback);\n    return callback.prototype.key;\n  },\n  clearInterval: function clearInterval(key) {\n    var _intervals = intervals.filter(function (ele, pos) {\n      return ele.prototype.key == key;\n    });\n\n    if (_intervals.length > 0) {\n      var index = intervals.indexOf(_intervals[0]);\n      if (index != -1) intervals.disabled = true;\n      return _intervals[0];\n    } else {\n      return null;\n    }\n  },\n  animate: function animate(callback) {\n    window.requestAnimationFrame(EditorTimer.animate);\n\n    if (running) {\n      for (var i = 0; i < animites.length; i++) {\n        animites[i]({\n          count: count\n        });\n      }\n\n      EditorTimer.addCount(); // count++\n    }\n\n    for (var i = 0; i < timeouts.length; i++) {\n      timeouts[i].prototype.endTime = new Date().valueOf();\n\n      if (timeouts[i].prototype.endTime - timeouts[i].prototype.startTime >= timeouts[i].prototype.ms && !timeouts[i].prototype.disabled) {\n        timeouts[i].prototype.disabled = true;\n        timeouts[i].call(timeouts[i].prototype, timeouts[i].prototype.endTime);\n      }\n    }\n\n    for (var i = 0; i < intervals.length; i++) {\n      intervals[i].prototype.endTime = new Date().valueOf();\n\n      if (intervals[i].prototype.endTime - intervals[i].prototype.lastTime >= intervals[i].prototype.ms && !intervals[i].prototype.disabled) {\n        intervals[i].prototype.lastTime = intervals[i].prototype.endTime;\n        intervals[i].call(intervals[i].prototype, intervals[i].prototype.endTime);\n      }\n    }\n\n    timeouts = timeouts.filter(function (ele, pos) {\n      return !ele.prototype.disabled;\n    });\n    intervals = intervals.filter(function (ele, pos) {\n      return !ele.prototype.disabled;\n    });\n  },\n  startAnimation: function startAnimation() {\n    running = true;\n  },\n  stopAnimation: function stopAnimation() {\n    running = false;\n  },\n  addAnimationHandler: function addAnimationHandler(handler) {\n    var _running = running;\n    EditorTimer.stopAnimation(handler);\n    window.requestAnimationFrame(function () {\n      animites.push(handler);\n      if (_running) EditorTimer.startAnimation(handler);\n    });\n  },\n  removeAnimationHandler: function removeAnimationHandler(handler) {\n    var _running = running;\n    EditorTimer.stopAnimation(handler);\n    window.requestAnimationFrame(function () {\n      var index = animites.indexOf(handler);\n      if (index != -1) animites.splice(handler, index);\n      if (_running) EditorTimer.startAnimation(handler);\n    });\n  }\n};\nEditorTimer.animate();\nexports.default = EditorTimer;","map":null,"metadata":{},"sourceType":"script"}