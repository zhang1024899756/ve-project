{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/zhangxinyu/Desktop/ve_project/src/components/attribute-form.js\";\nimport React from 'react';\nimport URL from '../serverAPI.config';\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\n\nclass AttrForm extends React.Component {\n  _handleReset() {\n    this.props.form.resetFields();\n  }\n\n  _checkNname(rule, value, callback) {\n    console.log(value);\n    const data = {\n      name: value\n    };\n    const myFetchOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify(data)\n    };\n    fetch(URL.checkAttribute, myFetchOptions).then(res => {\n      if (res.status == 202) {\n        callback('该name属性已存在！');\n      } else {\n        callback();\n      }\n    });\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault(); //原生的阻止冒泡\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('表单接收到的值:', values);\n        const data = {\n          id: values.attrId,\n          name: values.attrName,\n          callname: values.attrCall,\n          value: values.attrValue\n        };\n        const myFetchOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          mode: 'cors',\n          body: JSON.stringify(data)\n        };\n        fetch(URL.newAttribute, myFetchOptions).then(res => {\n          if (res.ok) {\n            _message.success('提交成功！');\n          } else {\n            _message.error('提交失败！');\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 6\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    return React.createElement(_Form, {\n      onSubmit: this._handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), getFieldDecorator('attrId')(React.createElement(_Input, {\n      type: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({\n      label: \"\\u5C5E\\u6027\\u540D\\u79F0\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), getFieldDecorator('attrName', {\n      rules: [{\n        required: true,\n        message: '必填字段！'\n      }, {\n        validator: this._checkNname\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({\n      label: \"\\u5C5E\\u6027\\u79F0\\u547C\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), getFieldDecorator('attrCall', {\n      rules: [{\n        required: true,\n        message: '必填字段！'\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"\\u4F60\\u600E\\u4E48\\u79F0\\u547C\\u4ED6\\uFF1F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({\n      label: \"\\u5C5E\\u6027\\u503C\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), getFieldDecorator('attrValue', {\n      rules: [{\n        required: true,\n        message: '必填字段！'\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        width: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"), React.createElement(_Button, {\n      onClick: this._handleReset.bind(this),\n      style: {\n        marginLeft: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"\\u91CD\\u7F6E\")));\n  }\n\n}\n\nconst AttributeForm = _Form.create()(AttrForm);\n\nexport default AttributeForm;","map":{"version":3,"sources":["/Users/zhangxinyu/Desktop/ve_project/src/components/attribute-form.js"],"names":["React","URL","FormItem","Item","Option","AttrForm","Component","_handleReset","props","form","resetFields","_checkNname","rule","value","callback","console","log","data","name","myFetchOptions","method","headers","mode","body","JSON","stringify","fetch","checkAttribute","then","res","status","_handleSubmit","e","preventDefault","validateFields","err","values","id","attrId","attrName","callname","attrCall","attrValue","newAttribute","ok","success","error","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","bind","rules","required","message","validator","width","marginLeft","AttributeForm","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Col, Button, Select, message  } from 'antd';\nimport URL from '../serverAPI.config';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass AttrForm extends React.Component {\n\n  _handleReset () {\n    this.props.form.resetFields();\n  }\n\n  _checkNname (rule, value, callback) {\n    console.log(value)\n    const data = {name:value}\n    const myFetchOptions = {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      mode : 'cors',\n      body: JSON.stringify(data)\n    };\n    fetch(URL.checkAttribute,myFetchOptions)\n      .then((res) => {\n        if (res.status == 202) {\n          callback('该name属性已存在！');\n        } else {\n          callback();\n        }\n      })\n  }\n\n  _handleSubmit (e) {\n    e.preventDefault();//原生的阻止冒泡\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('表单接收到的值:', values);\n        const data = {id:values.attrId,name:values.attrName,callname:values.attrCall,value:values.attrValue}\n        const myFetchOptions = {\n          method: 'POST',\n          headers: {'Content-Type':'application/json'},\n          mode : 'cors',\n          body: JSON.stringify(data)\n        };\n        fetch(URL.newAttribute,myFetchOptions)\n          .then((res) => {\n            if (res.ok) {\n               message.success('提交成功！');\n            }else {\n               message.error('提交失败！');\n            }\n          })\n      }\n    })\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    return (\n      <Form onSubmit={this._handleSubmit.bind(this)}>\n        <FormItem {...formItemLayout}>\n          {getFieldDecorator('attrId')(<Input type='hidden' />)}\n        </FormItem>\n        <FormItem label=\"属性名称\" {...formItemLayout}>\n          {getFieldDecorator('attrName', {\n            rules: [{ required: true, message: '必填字段！' },{ validator: this._checkNname}],\n          })(\n            <Input placeholder=\"name\" />\n          )}\n        </FormItem>\n        <FormItem label=\"属性称呼\" {...formItemLayout}>\n          {getFieldDecorator('attrCall', {\n            rules: [{ required: true, message: '必填字段！' }],\n          })(\n            <Input placeholder=\"你怎么称呼他？\" />\n          )}\n        </FormItem>\n        <FormItem label=\"属性值\" {...formItemLayout}>\n          {getFieldDecorator('attrValue', {\n            rules: [{ required: true, message: '必填字段！' }],\n          })(\n            <Input placeholder=\"value\" />\n          )}\n        </FormItem>\n        <FormItem {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" style={{ width: 100 }}>提交</Button>\n          <Button onClick={this._handleReset.bind(this)} style={{ marginLeft: 8 }}>重置</Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst AttributeForm = Form.create()(AttrForm);\nexport default AttributeForm\n"]},"metadata":{},"sourceType":"module"}