{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _element = require('../element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _util = require('../util');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Link =\n/*#__PURE__*/\nfunction (_element2$default) {\n  _inherits(Link, _element2$default);\n\n  function Link(nodeA, nodeB, name) {\n    var _this;\n\n    _classCallCheck(this, Link);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Link).call(this));\n    _this.nodeA = nodeA;\n    _this.nodeB = nodeB;\n    _this.name = name;\n    _this.style = {\n      strokeStyle: '116, 166, 250',\n      alpha: 1,\n      lineWidth: 2\n    };\n    return _this;\n  }\n\n  _createClass(Link, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.strokeStyle = 'rgba(' + this.style.strokeStyle + ',' + this.style.alpha + ')';\n      ctx.lineWidth = this.style.lineWidth;\n      ctx.moveTo(this.nodeA.x + this.nodeA.width / 2, this.nodeA.y + this.nodeA.height / 2);\n      ctx.lineTo(this.nodeB.x + this.nodeB.width / 2, this.nodeB.y + this.nodeB.height / 2);\n      ctx.stroke();\n      ctx.closePath();\n      ctx.restore();\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return (0, _util.getDistance)(this.nodeA, this.nodeB);\n    }\n  }]);\n\n  return Link;\n}(_element2.default);\n\nexports.default = Link;","map":null,"metadata":{},"sourceType":"script"}