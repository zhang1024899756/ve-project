{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _EditorSelection = require('../../utils/EditorSelection');\n\nvar _EditorSelection2 = _interopRequireDefault(_EditorSelection);\n\nvar _EditorDom = require('../../utils/EditorDom');\n\nvar _EditorDom2 = _interopRequireDefault(_EditorDom);\n\nvar _EditorResize = require('../../utils/EditorResize');\n\nvar _EditorResize2 = _interopRequireDefault(_EditorResize);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar EditorContentEditableDiv = function (_React$Component) {\n  _inherits(EditorContentEditableDiv, _React$Component);\n\n  function EditorContentEditableDiv(props) {\n    _classCallCheck(this, EditorContentEditableDiv);\n\n    var _this = _possibleConstructorReturn(this, (EditorContentEditableDiv.__proto__ || Object.getPrototypeOf(EditorContentEditableDiv)).call(this, props));\n\n    _this.handleWindowMouseDown = function (e) {\n      e = e || event;\n      var target = e.target || e.srcElement;\n      var tagName = target.tagName.toUpperCase();\n      var FormControls = [\"TEXTAREA\", \"INPUT\", \"SELECT\", \"OPTIONS\"];\n\n      if (FormControls.indexOf(tagName) != -1) {\n        return;\n      }\n\n      _EditorSelection2.default.clearRange();\n    };\n\n    _this.handleMouseDown = function (e) {\n      _EditorSelection2.default.clearRange();\n\n      _EditorDom2.default.stopPropagation(e);\n    };\n\n    _this.handleMouseUp = function (e) {\n      _EditorSelection2.default.createRange();\n\n      if (_this.props.onRangeChange) {\n        _this.props.onRangeChange(e);\n      }\n\n      _EditorDom2.default.stopPropagation(e);\n    };\n\n    _this.state = {\n      content: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(EditorContentEditableDiv, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      window.addEventListener('keydown', this.props.handleKeyDown);\n      window.addEventListener('keyup', this.props.handleKeyUp);\n      window.addEventListener(\"mousedown\", this.handleWindowMouseDown);\n      window.addEventListener(\"mouseup\", this.handleMouseUp);\n      setTimeout(this.props.onEditorMount, 50);\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      // reload判断当前是否可以允许刷新\n      // loaded状态变化时，务必重新刷新\n      var currentValue = nextProps.value;\n      var editorValue = this.getContent();\n\n      if (currentValue == editorValue) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate() {// EditorSelection.cloneRange();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {// EditorSelection.cloneRange();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"mousedown\", this.handleWindowMouseDown);\n      window.removeEventListener(\"mouseup\", this.handleMouseUp);\n      window.removeEventListener(\"keydown\", this.props.handleKeyDown);\n      window.removeEventListener(\"keyup\", this.props.handleKeyUp);\n    }\n  }, {\n    key: 'getContent',\n    value: function getContent() {\n      var target = _reactDom2.default.findDOMNode(this.refs.edit);\n\n      return target.innerHTML;\n    }\n  }, {\n    key: 'setContent',\n    value: function setContent(content) {\n      if (this.getContent() == content) return;\n      this.setState({\n        content: content\n      });\n\n      var target = _reactDom2.default.findDOMNode(this.refs.edit);\n\n      target.innerHTML = content;\n    }\n  }, {\n    key: 'getName',\n    value: function getName() {\n      return \"div\";\n    }\n  }, {\n    key: 'setResizeTarget',\n    value: function setResizeTarget(target) {\n      this.refs.resize.setTarget(target);\n    }\n  }, {\n    key: 'clearResizeTarget',\n    value: function clearResizeTarget() {\n      this.refs.resize.clearTarget();\n    }\n  }, {\n    key: 'getEditorRange',\n    value: function getEditorRange() {\n      return _reactDom2.default.findDOMNode(this.refs.edit);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('div', {\n        className: 'editor-contenteditable-div'\n      }, _react2.default.createElement(_EditorResize2.default, {\n        ref: 'resize'\n      }), _react2.default.createElement('div', {\n        className: 'editable-range',\n        ref: 'edit',\n        onMouseUp: this.handleMouseUp,\n        onMouseDown: this.handleMouseDown,\n        onInput: function onInput(e) {\n          _EditorSelection2.default.selection = _EditorSelection2.default.getSelection();\n\n          if (_EditorSelection2.default.selection && _EditorSelection2.default.selection.rangeCount > 0) {\n            _EditorSelection2.default.range = _EditorSelection2.default.selection.getRangeAt(0).cloneRange();\n          } else {\n            _EditorSelection2.default.range = null;\n          }\n        },\n        contentEditable: true,\n        dangerouslySetInnerHTML: {\n          __html: this.state.content\n        }\n      }));\n    }\n  }]);\n\n  return EditorContentEditableDiv;\n}(_react2.default.Component);\n\nexports.default = EditorContentEditableDiv;\nmodule.exports = EditorContentEditableDiv;","map":null,"metadata":{},"sourceType":"script"}