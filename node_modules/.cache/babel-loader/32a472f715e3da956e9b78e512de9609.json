{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/zhangxinyu/Desktop/ve_project/src/components/log-form.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nconst FormItem = _Form.Item;\n\nclass LoginForm extends React.Component {\n  constructor() {\n    super(); //调用基类所有初始化方法\n\n    this.state = {\n      redirectToReferrer: false,\n      identity: null,\n      userId: null\n    };\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault(); //原生的阻止冒泡\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('表单接收到的值:', values);\n        let myFetchOptions = {\n          method: 'GET'\n        };\n        fetch(\"http://localhost:8100/user/signin?userName=\" + values.userName + \"&password=\" + values.password + \"&identity=\" + values.identity, myFetchOptions).then(response => response.json().then(json => {\n          console.log('返回值:', json);\n\n          if (values.identity == \"admin\" && json.key == \"ok\") {\n            this.props.form.resetFields();\n            this.setState({\n              redirectToReferrer: true,\n              identity: \"admin\",\n              userId: json.userId\n            });\n          }\n\n          if (values.identity == \"teacher\") {}\n\n          if (values.identity == \"student\") {}\n\n          if (json.key == \"-1\") {\n            this.props.form.resetFields();\n\n            _message.error('用户名或密码错误！');\n          }\n        }));\n      }\n    });\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const redirectToReferrer = this.state.redirectToReferrer;\n    const data = {\n      userId: this.state.userId,\n      identity: this.state.identity\n    };\n    const path = {\n      pathname: '/index',\n      state: data\n    };\n\n    if (redirectToReferrer) {\n      return React.createElement(Redirect, {\n        push: true,\n        to: path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(_Form, {\n      onSubmit: this._handleSubmit.bind(this),\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, getFieldDecorator('userName', {\n      rules: [{\n        required: true,\n        message: '请输入你的用户名'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      placeholder: \"\\u5B66\\u53F7/\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: '请输入你的密码'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, getFieldDecorator('identity', {\n      rules: [{\n        required: true,\n        message: '请确认你的身份'\n      }]\n    })(React.createElement(_Select, {\n      showSearch: true,\n      placeholder: \"\\u9009\\u62E9\\u4E00\\u4E2A\\u8EAB\\u4EFD...\",\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(_Select.Option, {\n      value: \"student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"\\u5B66\\u751F\"), React.createElement(_Select.Option, {\n      value: \"teacher\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"\\u6559\\u5E08\"), React.createElement(_Select.Option, {\n      value: \"admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"\\u7BA1\\u7406\\u5458\")))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(_Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"\\u8BB0\\u4F4F\\u5BC6\\u7801\")), React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"\\u5FD8\\u8BB0\\u5BC6\\u7801\\uFF1F\"), React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"\\u767B\\u9646\")));\n  }\n\n}\n\nconst WrappedLoginForm = _Form.create()(LoginForm);\n\nexport default WrappedLoginForm;","map":{"version":3,"sources":["/Users/zhangxinyu/Desktop/ve_project/src/components/log-form.js"],"names":["React","Redirect","FormItem","Item","LoginForm","Component","constructor","state","redirectToReferrer","identity","userId","_handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","myFetchOptions","method","fetch","userName","password","then","response","json","key","resetFields","setState","error","render","getFieldDecorator","data","path","pathname","bind","rules","required","message","color","input","option","children","toLowerCase","indexOf","valuePropName","initialValue","WrappedLoginForm","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { message, Form, Icon, Input, Button, Checkbox, Select } from 'antd';\n\nconst FormItem = Form.Item;\n\nclass LoginForm extends React.Component {\n  constructor () {\n    super();//调用基类所有初始化方法\n    this.state = {\n      redirectToReferrer: false,\n      identity: null,\n      userId: null\n    };\n  }\n  _handleSubmit (e) {\n    e.preventDefault();//原生的阻止冒泡\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('表单接收到的值:', values);\n        let myFetchOptions = {\n          method: 'GET'\n        };\n        fetch(\"http://localhost:8100/user/signin?userName=\"+values.userName+\"&password=\"+values.password+\"&identity=\"+values.identity,myFetchOptions)\n          .then(response=>response.json().then(json=>{\n            console.log('返回值:', json);\n            if (values.identity == \"admin\"&&json.key == \"ok\") {\n              this.props.form.resetFields();\n              this.setState({\n                redirectToReferrer: true,\n                identity: \"admin\",\n                userId: json.userId\n              });\n            }if (values.identity == \"teacher\") {\n\n            }if (values.identity == \"student\") {\n\n            }if (json.key == \"-1\") {\n              this.props.form.resetFields();\n              message.error('用户名或密码错误！');\n            }\n          }))\n      }\n    });\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { redirectToReferrer } = this.state;\n    const data = {userId: this.state.userId,identity:this.state.identity}\n    const path = {\n      pathname:'/index',\n      state: data\n    }\n    if (redirectToReferrer) {\n      return <Redirect push to={path} />;\n    }\n    return (\n      <Form onSubmit={this._handleSubmit.bind(this)} className=\"login-form\">\n        <FormItem>\n          {getFieldDecorator('userName', {\n            rules: [{ required: true, message: '请输入你的用户名' }],\n          })(\n            <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"学号/用户名\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: '请输入你的密码' }],\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('identity', {\n            rules: [{ required: true, message: '请确认你的身份' }],\n          })(\n            <Select\n              showSearch\n              placeholder=\"选择一个身份...\"\n              optionFilterProp=\"children\"\n              filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}>\n                <Select.Option value=\"student\">学生</Select.Option>\n                <Select.Option value=\"teacher\">教师</Select.Option>\n                <Select.Option value=\"admin\">管理员</Select.Option>\n            </Select>\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true,\n          })(\n            <Checkbox>记住密码</Checkbox>\n          )}\n          <a className=\"login-form-forgot\" href=\"\">忘记密码？</a>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            登陆\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedLoginForm = Form.create()(LoginForm);\nexport default WrappedLoginForm\n"]},"metadata":{},"sourceType":"module"}