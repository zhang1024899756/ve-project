{"ast":null,"code":"var _jsxFileName = \"/Users/zhangxinyu/Desktop/ve_project/src/components/react-umeditor.js\";\nimport React from 'react';\nimport Editor from 'react-umeditor';\nexport default class ReactUmeditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  handleChange(content) {\n    this.setState({\n      content: content\n    });\n    this.props.handleChildValueChange(content);\n  }\n\n  getIcons() {\n    const icons = [\"source | undo redo | bold italic underline strikethrough fontborder emphasis | \", \"paragraph fontfamily fontsize | superscript subscript | \", \"forecolor backcolor | removeformat | insertorderedlist insertunorderedlist | selectall | \", \"cleardoc  | indent outdent | justifyleft justifycenter justifyright | touppercase tolowercase | \", \"horizontal date time  | image emotion spechars | inserttable\"];\n    return icons;\n  }\n\n  getPlugins() {\n    return {\n      \"image\": {\n        \"uploader\": {\n          \"name\": \"file\",\n          \"type\": \"local\",\n          \"url\": \"http://localhost:8100/picture/upload\"\n        }\n      }\n    };\n  }\n\n  render() {\n    const icons = this.getIcons();\n    const plugins = this.getPlugins();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      ref: \"editor\",\n      icons: icons,\n      value: this.state.content,\n      onChange: this.handleChange.bind(this),\n      plugins: plugins,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/zhangxinyu/Desktop/ve_project/src/components/react-umeditor.js"],"names":["React","Editor","ReactUmeditor","Component","constructor","props","state","content","handleChange","setState","handleChildValueChange","getIcons","icons","getPlugins","render","plugins","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,eAAe,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AACvDC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AACDC,EAAAA,YAAY,CAAED,OAAF,EAAW;AACnB,SAAKE,QAAL,CAAc;AAACF,MAAAA,OAAO,EAAEA;AAAV,KAAd;AACA,SAAKF,KAAL,CAAWK,sBAAX,CAAkCH,OAAlC;AACH;;AAEDI,EAAAA,QAAQ,GAAI;AACR,UAAMC,KAAK,GAAG,CACV,iFADU,EAEV,0DAFU,EAGV,2FAHU,EAIV,kGAJU,EAKV,8DALU,CAAd;AAOA,WAAOA,KAAP;AACH;;AACDC,EAAAA,UAAU,GAAI;AACV,WAAO;AACH,eAAS;AACL,oBAAY;AACR,kBAAO,MADC;AAER,kBAAO,OAFC;AAGR,iBAAO;AAHC;AADP;AADN,KAAP;AASH;;AACDC,EAAAA,MAAM,GAAI;AACN,UAAMF,KAAK,GAAG,KAAKD,QAAL,EAAd;AACA,UAAMI,OAAO,GAAG,KAAKF,UAAL,EAAhB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,QAAZ;AACE,MAAA,KAAK,EAAED,KADT;AAEE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,OAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKC,YAAL,CAAkBQ,IAAlB,CAAuB,IAAvB,CAHZ;AAIE,MAAA,OAAO,EAAED,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAUH;;AA9CsD","sourcesContent":["import React from 'react';\nimport Editor from 'react-umeditor';\n\nexport default class ReactUmeditor extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            content: \"\"\n        }\n    }\n    handleChange (content) {\n        this.setState({content: content})\n        this.props.handleChildValueChange(content)\n    }\n\n    getIcons () {\n        const icons = [\n            \"source | undo redo | bold italic underline strikethrough fontborder emphasis | \",\n            \"paragraph fontfamily fontsize | superscript subscript | \",\n            \"forecolor backcolor | removeformat | insertorderedlist insertunorderedlist | selectall | \",\n            \"cleardoc  | indent outdent | justifyleft justifycenter justifyright | touppercase tolowercase | \",\n            \"horizontal date time  | image emotion spechars | inserttable\"\n        ]\n        return icons;\n    }\n    getPlugins () {\n        return {\n            \"image\": {\n                \"uploader\": {\n                    \"name\":\"file\",\n                    \"type\":\"local\",\n                    \"url\": \"http://localhost:8100/picture/upload\"\n                }\n            }\n        }\n    }\n    render () {\n        const icons = this.getIcons();\n        const plugins = this.getPlugins();\n        return(\n          <div>\n          <Editor ref=\"editor\"\n            icons={icons}\n            value={this.state.content}\n            onChange={this.handleChange.bind(this)}\n            plugins={plugins}\n          />\n          </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}