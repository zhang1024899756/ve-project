{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ComboBox = require('../base/ComboBox');\n\nvar _ComboBox2 = _interopRequireDefault(_ComboBox);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ParagraphDropdown = function (_Component) {\n  _inherits(ParagraphDropdown, _Component);\n\n  function ParagraphDropdown(props) {\n    _classCallCheck(this, ParagraphDropdown);\n\n    var _this = _possibleConstructorReturn(this, (ParagraphDropdown.__proto__ || Object.getPrototypeOf(ParagraphDropdown)).call(this, props));\n\n    _this.state = {\n      handle: function handle() {}\n    };\n    return _this;\n  }\n\n  _createClass(ParagraphDropdown, [{\n    key: 'open',\n    value: function open(position, handle) {\n      this.setState({\n        handle: handle\n      });\n      this.refs.root.open(position);\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      if (this.refs.root) this.refs.root.close();\n    }\n  }, {\n    key: 'toggle',\n    value: function toggle(position, handle) {\n      this.setState({\n        handle: handle\n      });\n      this.refs.root.toggle(position);\n    }\n  }, {\n    key: 'handleSelect',\n    value: function handleSelect(e) {\n      e = e || event;\n      var target = e.target || e.srcElement;\n      var value = target.getAttribute('data-value');\n\n      if (this.state.handle) {\n        this.state.handle(value);\n      }\n\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      } else {\n        e.cancelBubble = true;\n      }\n\n      this.close();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var handleSelect = this.handleSelect.bind(this);\n      var paragraph = this.props.paragraph ? this.props.paragraph : [];\n      var props = this.props;\n\n      if (this.props.hidden) {\n        return _react2.default.createElement('div', null);\n      } else {\n        return _react2.default.createElement(_ComboBox2.default, {\n          ref: 'root',\n          className: 'paragraph-combobox'\n        }, _react2.default.createElement('ul', null, paragraph.map(function (ele, pos) {\n          return _react2.default.createElement('li', {\n            className: ele.value == props.value ? \"active\" : \"\",\n            key: pos,\n            'data-value': ele.value,\n            onClick: handleSelect\n          }, _react2.default.createElement(ele.value, {\n            \"data-value\": ele.value\n          }, ele.name));\n        })));\n      }\n    }\n  }]);\n\n  return ParagraphDropdown;\n}(_react.Component);\n\nexports.default = ParagraphDropdown;","map":null,"metadata":{},"sourceType":"script"}