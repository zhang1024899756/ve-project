{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/zhangxinyu/Desktop/ve_project/src/components/experiment-form.js\";\nimport React from 'react';\nimport ReactUmeditor from './react-umeditor';\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\n\nclass ExperForm extends React.Component {\n  constructor() {\n    super(); //调用基类所有初始化方法\n\n    this.state = {\n      compolist: [],\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const myFetchOptions = {\n      method: 'GET',\n      mode: 'cors'\n    };\n    fetch(\"http://localhost:8100/component/list\", myFetchOptions).then(res => res.json().then(json => {\n      for (var i = 0; i < json.length; i++) {\n        this.state.compolist.push(React.createElement(Option, {\n          key: json[i]._id.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, json[i].name));\n      }\n    }));\n  }\n\n  _handleChildValueChange(content) {\n    this.setState({\n      content: content\n    });\n  }\n\n  _handleReset() {\n    this.props.form.resetFields();\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const data = {\n          id: values.experimentId,\n          name: values.experimentName,\n          introduction: values.experimentIntrod,\n          components: values.experimentCompo,\n          content: this.state.content\n        };\n        const myFetchOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          mode: 'cors',\n          body: JSON.stringify(data)\n        };\n        console.log(data);\n\n        if (this.state.content !== \"\") {\n          fetch(\"http://localhost:8100/experiment/new\", myFetchOptions).then(res => {\n            if (res.ok) {\n              _message.success('提交成功！');\n            } else {\n              _message.error('提交失败！');\n            }\n          });\n        } else {\n          _message.warning('请为实验添加内容-_-!');\n        }\n      }\n    });\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 3\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      }\n    };\n    const submitLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8,\n          offset: 3\n        }\n      }\n    };\n    const richEditerLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 20\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 3\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 20\n        }\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      onSubmit: this._handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), getFieldDecorator('experimentId')(React.createElement(_Input, {\n      type: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({\n      label: \"\\u5B9E\\u9A8C\\u540D\\u79F0\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), getFieldDecorator('experimentName', {\n      rules: [{\n        required: true,\n        message: '必填字段！'\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({\n      label: \"\\u5B9E\\u9A8C\\u7B80\\u4ECB\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), getFieldDecorator('experimentIntrod', {\n      rules: [{\n        required: true,\n        message: '必填字段！'\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"introduction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))), React.createElement(FormItem, Object.assign({\n      label: \"\\u7EC4\\u4EF6\"\n    }, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), getFieldDecorator('experimentCompo', {\n      rules: [{\n        required: true,\n        message: '必填字段！'\n      }]\n    })(React.createElement(_Select, {\n      mode: \"multiple\",\n      placeholder: \"\\u8BF7\\u6DFB\\u52A0\\u5B9E\\u9A8C\\u7684\\u5FC5\\u8981\\u7684\\u7EC4\\u4EF6...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.compolist))), React.createElement(FormItem, Object.assign({}, submitLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        width: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"), React.createElement(_Button, {\n      onClick: this._handleReset.bind(this),\n      style: {\n        marginLeft: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"\\u91CD\\u7F6E\"))), React.createElement(\"div\", {\n      style: {\n        marginBottom: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(ReactUmeditor, Object.assign({\n      handleChildValueChange: this._handleChildValueChange.bind(this)\n    }, richEditerLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst ExperimentForm = _Form.create()(ExperForm);\n\nexport default ExperimentForm;","map":{"version":3,"sources":["/Users/zhangxinyu/Desktop/ve_project/src/components/experiment-form.js"],"names":["React","ReactUmeditor","FormItem","Item","Option","ExperForm","Component","constructor","state","compolist","content","componentDidMount","myFetchOptions","method","mode","fetch","then","res","json","i","length","push","_id","toString","name","_handleChildValueChange","setState","_handleReset","props","form","resetFields","_handleSubmit","e","preventDefault","validateFields","err","values","data","id","experimentId","experimentName","introduction","experimentIntrod","components","experimentCompo","headers","body","JSON","stringify","console","log","ok","success","error","warning","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","submitLayout","offset","richEditerLayout","tailFormItemLayout","bind","rules","required","message","width","marginLeft","marginBottom","ExperimentForm","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, Select, message } from 'antd';\nimport ReactUmeditor from './react-umeditor';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass ExperForm extends React.Component {\n  constructor () {\n    super();//调用基类所有初始化方法\n    this.state = {\n      compolist: [],\n      content: \"\"\n    };\n  }\n  componentDidMount () {\n    const myFetchOptions = {\n      method: 'GET',\n      mode : 'cors',\n    };\n    fetch(\"http://localhost:8100/component/list\",myFetchOptions)\n      .then(res=>res.json().then(json=>{\n        for (var i = 0; i < json.length;i++) {\n          this.state.compolist.push(<Option key={json[i]._id.toString()}>{json[i].name}</Option>)\n        }\n      }))\n  }\n\n  _handleChildValueChange (content) {\n    this.setState({ content: content })\n  }\n\n  _handleReset () {\n    this.props.form.resetFields();\n  }\n\n  _handleSubmit (e) {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const data = {\n          id:values.experimentId,\n          name:values.experimentName,\n          introduction:values.experimentIntrod,\n          components:values.experimentCompo,\n          content:this.state.content\n        }\n        const myFetchOptions = {\n          method: 'POST',\n          headers: {'Content-Type':'application/json'},\n          mode : 'cors',\n          body: JSON.stringify(data)\n        };\n        console.log(data)\n        if (this.state.content !== \"\") {\n          fetch(\"http://localhost:8100/experiment/new\",myFetchOptions)\n            .then((res) => {\n              if (res.ok) {\n                 message.success('提交成功！');\n              }else {\n                 message.error('提交失败！');\n              }\n            })\n        } else {\n          message.warning('请为实验添加内容-_-!');\n        }\n      }\n    })\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 3 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      }\n    };\n    const submitLayout = {\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: {\n          span: 8,\n          offset: 3\n        }\n      }\n    };\n    const richEditerLayout = {\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 20 }\n      }\n    };\n    const tailFormItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 3 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 20 }\n      }\n    };\n    return (\n      <div>\n        <Form onSubmit={this._handleSubmit.bind(this)}>\n          <FormItem {...formItemLayout}>\n            {getFieldDecorator('experimentId')(\n              <Input type=\"hidden\" />\n            )}\n          </FormItem>\n          <FormItem label=\"实验名称\" {...formItemLayout}>\n            {getFieldDecorator('experimentName', {\n              rules: [{ required: true, message: '必填字段！' }],\n            })(\n              <Input placeholder=\"name\" />\n            )}\n          </FormItem>\n          <FormItem label=\"实验简介\" {...formItemLayout}>\n          {getFieldDecorator('experimentIntrod', {\n            rules: [{ required: true, message: '必填字段！' }],\n          })(\n            <Input placeholder=\"introduction\" />\n          )}\n          </FormItem>\n          <FormItem label=\"组件\" {...tailFormItemLayout}>\n            {getFieldDecorator('experimentCompo', {\n              rules: [{ required: true, message: '必填字段！' }],\n            })(\n              <Select mode=\"multiple\" placeholder=\"请添加实验的必要的组件...\">\n                {this.state.compolist}\n              </Select>\n            )}\n          </FormItem>\n          <FormItem {...submitLayout}>\n            <Button type=\"primary\" htmlType=\"submit\" style={{ width: 100 }}>提交</Button>\n            <Button onClick={this._handleReset.bind(this)} style={{ marginLeft: 8 }}>重置</Button>\n          </FormItem>\n        </Form>\n        <div style={{ marginBottom: 100 }}>\n          <ReactUmeditor handleChildValueChange={this._handleChildValueChange.bind(this)} {...richEditerLayout}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ExperimentForm = Form.create()(ExperForm);\nexport default ExperimentForm\n"]},"metadata":{},"sourceType":"module"}