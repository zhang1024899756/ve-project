{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.alignmentPropTypes = undefined;\nexports.removeAlignmentProps = removeAlignmentProps;\n\nexports.default = function () {\n  for (var _len = arguments.length, options = Array(_len), _key = 0; _key < _len; _key++) {\n    options[_key] = arguments[_key];\n  }\n\n  return (0, _styleHelper2.default)(options, alignmentPropTypes, mapAlignmentStyle);\n};\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelper = require('../styleHelper');\n\nvar _styleHelper2 = _interopRequireDefault(_styleHelper);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar allowedValues = ['left', 'right', 'center'];\nvar alignmentPropTypes = exports.alignmentPropTypes = {\n  horizontalAlignment: _propTypes2.default.string,\n  verticalAlignment: _propTypes2.default.string\n};\n\nfunction removeAlignmentProps(props) {\n  return (0, _styleHelper.extractProps)(props, alignmentPropTypes)[0];\n}\n\nfunction mapAlignmentStyle(key, value, props) {\n  var finalKey = void 0,\n      finalValue = void 0;\n\n  if (allowedValues.indexOf(value) === -1) {\n    console.error('Unknown value for ' + key + ': ' + value);\n  } else {\n    var layout = 'horizontal';\n\n    if (props !== undefined && typeof props.layout !== 'undefined') {\n      layout = props.layout;\n    }\n\n    if (key === 'horizontalAlignment' && layout === 'horizontal' || key === 'verticalAlignment' && layout === 'vertical') {\n      finalKey = 'justifyContent';\n\n      switch (value) {\n        case 'center':\n          finalValue = 'center';\n          break;\n\n        case 'left':\n          finalValue = 'flex-start';\n          break;\n\n        case 'right':\n          finalValue = 'flex-end';\n          break;\n      }\n    } else if (key === 'verticalAlignment' && layout === 'horizontal' || key === 'horizontalAlignment' && layout === 'vertical') {\n      finalKey = 'alignItems';\n\n      switch (value) {\n        case 'center':\n          finalValue = 'center';\n          break;\n\n        case 'left':\n          finalValue = 'flex-start';\n          break;\n\n        case 'right':\n          finalValue = 'flex-end';\n          break;\n      }\n    }\n  }\n\n  return [finalKey, finalValue];\n}","map":null,"metadata":{},"sourceType":"script"}