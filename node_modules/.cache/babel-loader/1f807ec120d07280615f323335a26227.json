{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\r\n* @icon: 图标名称 string\r\n* @disabled: 是否禁用 bool\r\n* @onClick: 暴露点击事件 function\r\n* @title: 提示 string\r\n* @active: 是否选中 bool\r\n* @showHtml: 是否当前是显示html属性\r\n* @color: 前景色和背景色\r\n**/\n\n\nvar EditorIcon = function (_Component) {\n  _inherits(EditorIcon, _Component);\n\n  function EditorIcon() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, EditorIcon);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = EditorIcon.__proto__ || Object.getPrototypeOf(EditorIcon)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      e = e || event;\n      var target = e.target || e.srcElement;\n\n      while (target.className.indexOf(\"editor-icon\") == -1) {\n        target = target.parentElement;\n      }\n\n      e.target = target;\n\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          props = _objectWithoutProperties(_this$props, ['onClick']);\n\n      if (_this.props.onClick) {\n        _this.props.onClick(e, _extends({}, props));\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(EditorIcon, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.updateStyle();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.updateStyle();\n    }\n  }, {\n    key: 'updateStyle',\n    value: function updateStyle() {\n      var root = _reactDom2.default.findDOMNode(this.refs.root);\n\n      var icon = this.props.icon;\n\n      switch (this.props.icon) {\n        case \"forecolor\":\n        case \"backcolor\":\n          var color = this.props.color ? this.props.color : \"transparent\";\n          root.id = icon + \"_\" + new Date().valueOf();\n          var style = root.childElementCount > 0 ? root.children[0] : document.createElement('style');\n          style.innerHTML = \".icon-\" + icon + \"#\" + root.id + \":before{content:'';border-bottom:3px solid \" + color + \";}\";\n          if (root.childElementCount == 0) root.appendChild(style);\n          break;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          icon = _props.icon,\n          active = _props.active,\n          disabled = _props.disabled,\n          showHtml = _props.showHtml,\n          onClick = _props.onClick,\n          className = _props.className,\n          props = _objectWithoutProperties(_props, ['icon', 'active', 'disabled', 'showHtml', 'onClick', 'className']);\n\n      var _disabled = showHtml && icon != \"source\" && icon != \"separator\";\n\n      var _className = className || \"editor-icon icon-\" + icon;\n\n      if (icon == \"fontsize\" || icon == \"fontfamily\" || icon == \"paragraph\") {\n        return _react2.default.createElement('span', _extends({\n          ref: 'root',\n          className: (0, _classnames2.default)(_className, {\n            active: active,\n            disabled: disabled || _disabled\n          }),\n          onClick: this.handleClick\n        }, props), _react2.default.createElement('span', {\n          className: 'icon-label'\n        }, props.name), _react2.default.createElement('span', {\n          className: 'icon-caret'\n        }));\n      } else {\n        return _react2.default.createElement('span', _extends({\n          ref: 'root',\n          className: (0, _classnames2.default)(_className, {\n            active: active,\n            disabled: disabled || _disabled\n          }),\n          onClick: this.handleClick\n        }, props));\n      }\n    }\n  }]);\n\n  return EditorIcon;\n}(_react.Component);\n\nexports.default = EditorIcon;","map":null,"metadata":{},"sourceType":"script"}