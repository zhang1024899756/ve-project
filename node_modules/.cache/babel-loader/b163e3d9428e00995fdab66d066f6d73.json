{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar EndPointNode =\n/*#__PURE__*/\nfunction (_node2$default) {\n  _inherits(EndPointNode, _node2$default);\n\n  function EndPointNode(option) {\n    var _this;\n\n    _classCallCheck(this, EndPointNode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EndPointNode).call(this, option));\n    _this.r = option.r || 30;\n    _this.beginDegree = option.beginDegree || 0;\n    var endDegree = option.endDegree || 2;\n    _this.endDegree = endDegree * Math.PI;\n    return _this;\n  }\n\n  _createClass(EndPointNode, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      if (!this.visible) return;\n      var points = [];\n      var rx = node.width / 3;\n      var ry = node.height / 3;\n\n      function createPoint(x, y) {\n        var point = new _node2.default();\n        point.setSize(rx, ry);\n        point.style.fillStyle = '0,255,0';\n        point.setDragable(false);\n        point.setLocation(x, y);\n        return point;\n      }\n\n      points.push(createPoint(this.x - rx / 2, this.y + this.height / 2 - ry / 2));\n      points.push(createPoint(this.x + this.width / 2 - rx / 2, this.y - ry / 2));\n      points.push(createPoint(this.x + this.width - rx / 2, this.y + this.height / 2 - ry / 2));\n      points.push(createPoint(this.x + this.width / 2 - rx / 2, this.y + this.height - ry / 2));\n\n      if (this.isSelected()) {\n        for (var i = 0; i < points.length; i++) {\n          points[i].draw(ctx);\n        }\n      }\n\n      _get(_getPrototypeOf(EndPointNode.prototype), \"draw\", this).call(this, ctx);\n    }\n  }]);\n\n  return EndPointNode;\n}(_node2.default);\n\nexports.default = EndPointNode;","map":null,"metadata":{},"sourceType":"script"}