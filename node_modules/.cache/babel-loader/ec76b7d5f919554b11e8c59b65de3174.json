{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/zhangxinyu/Desktop/ve_project/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _element = require('../element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _tips = require('./tips');\n\nvar _tips2 = _interopRequireDefault(_tips);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ImageCache = {};\n\nvar AbstractNode =\n/*#__PURE__*/\nfunction (_element2$default) {\n  _inherits(AbstractNode, _element2$default);\n\n  function AbstractNode(option) {\n    var _this;\n\n    _classCallCheck(this, AbstractNode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AbstractNode).call(this));\n\n    _this.getName = function () {\n      return this.name;\n    };\n\n    _this.setName = function (n) {\n      this.name = n;\n      return this;\n    };\n\n    _this.getImage = function () {\n      return this.image;\n    };\n\n    _this.setImage = function (i) {\n      var node = this;\n\n      if (typeof i == 'string') {\n        var img = this.image = new Image();\n\n        this.image.onload = function () {\n          node.setSize(img.width, img.height);\n        };\n\n        this.image.src = i;\n      } else {\n        this.image = i;\n      }\n    };\n\n    _this.getTypeImage = function (type) {\n      var typeImages = {\n        'zone': './img/zone.png',\n        'host': './img/host.png',\n        'vm': './img/vm.png'\n      };\n\n      if (ImageCache[type]) {\n        return ImageCache[type];\n      }\n\n      var src = typeImages[type];\n      if (src == null) return null;\n      var image = new Image();\n      image.src = src;\n      return ImageCache[type] = image;\n    };\n\n    _this.getType = function () {\n      return this.type;\n    };\n\n    _this.setType = function (type) {\n      this.type = type;\n      this.setImage(this.getTypeImage(type));\n    };\n\n    _this.id = option.id || null;\n    _this.x = option.x || 0;\n    _this.y = option.y || 0;\n    _this.width = option.width || 0;\n    _this.height = option.height || 0;\n    _this.visible = option.visible || true;\n    _this.dragable = option.dragable || true;\n    _this.text = option.text || option.name || '';\n    _this.name = option.name || '';\n    _this.image = option.image || null;\n    _this.color = option.color || null;\n    _this.layout = option.layout || null;\n    _this.gravitate = option.gravitate || null; //function(){};\n\n    _this.parentContainer = option.parentContainer || null;\n    _this.inContainer = option.inContainer || null;\n    _this.outContainer = option.outContainer || null;\n    _this.fixed = option.fixed || false;\n    _this.tip = new _tips2.default(option.tip || {});\n    return _this;\n  }\n\n  _createClass(AbstractNode, [{\n    key: \"draw\",\n    value: function draw(ctx) {}\n  }]);\n\n  return AbstractNode;\n}(_element2.default);\n\nexports.default = AbstractNode;","map":null,"metadata":{},"sourceType":"script"}